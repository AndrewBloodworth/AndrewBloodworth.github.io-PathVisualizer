@import url("https://fonts.googleapis.com/css2?family=Lato:ital,wght@1,300&display=swap");
:root {
  --size: 50px;
  --grid-interact: auto;
  --nav-height: 75px;
  --node-cursor: grab;
  --grid-cursor: pointer;
  --font-size: 12px;
  --visibility: hidden;
  --nav-color: rgb(3, 36, 43);
}

body {
  --toggle: 1;
  --playState: "idle";
  --animation-speed: 0.5s;
  --animation-speed-path: 0.5s;
  --animation-speed-visited: 500ms;
  --visit-delay: 100ms;
}

html,
body,
main {
  margin: 0;
  height: 100%;
  font-family: "Lato", sans-serif;
}

.nav {
  display: flex;
  align-items: center;
  width: 100%;
  height: var(--nav-height);
  background-color: var(--nav-color);
}
.nav-title {
  display: flex;
  align-items: center;
  color: white;
  margin: 0 10px;
  width: 350px;
  height: 100%;
}
.nav-title h1 {
  font-size: 25px;
  margin: auto;
}

.controls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 5px;
}
.clear-button {
  background-color: transparent;
  color: white;
  pointer-events: var(--grid-interact);
}
.clear-button button:focus {
  outline: none;
  box-shadow: none;
}
.clear-button button {
  height: 30px;
  text-align: center;
  color: white;
  background-color: grey;
  border-radius: 10px;
  border: 1px solid white;
  cursor: pointer;
  margin-left: 10px;
}
.algo-button button:focus {
  outline: none;
  box-shadow: none;
}
.algo-button {
  pointer-events: var(--grid-interact);
}
.algo-button button {
  height: 30px;
  text-align: center;
  color: white;
  background-color: rgb(24, 134, 70);
  border-radius: 10px;
  border: 1px solid white;
  cursor: pointer;
}
.view-distance {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  font-size: 10px;
  color: white;
}

.settings-container {
  --gear-size: 40px;
  --padding: 5px;
  height: 100%;
  width: 100%;
  color: white;
  z-index: 100;
  display: flex;
  justify-content: space-between;
  align-items: center;

  margin-left: var(--gear-size);
  margin-top: calc(var(--gear-size) / 2);
  margin-bottom: calc(var(--gear-size) / 2);
}

.settings-gear {
  display: flex;
  justify-content: flex-start;
  align-items: center;
}
.gear,
.settings-menu,
.settings,
.slider,
.speed,
label {
  cursor: pointer;
}

.gear {
  z-index: 100;
  height: var(--gear-size);
  width: var(--gear-size);
  background-color: var(--nav-color);
  background-size: cover;
}
#gray {
  background-image: url("./Images/gear-gray.png");
  border-radius: calc(var(--gear-size) / 2 + var(--padding));
  margin: var(--padding);
}
#white {
  background-image: url("./Images/gear-white.png");
  border-radius: calc(var(--gear-size) / 2);
  margin: var(--padding);
}
@keyframes gearRotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(-360deg);
  }
}

.gear:hover {
  animation: gearRotate;
  animation-duration: 1s;
}
.settings-menu {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: flex-start;
  position: absolute;
  top: calc(calc(var(--nav-height) / 2) - calc(var(--gear-size) / 2));
  padding-left: calc(var(--gear-size) / 2 + var(--padding));
  padding-top: calc(var(--gear-size) / 2 + var(--padding));
  background-color: transparent;
}
.settings {
  box-shadow: 0 4px 8px 0 var(--nav-color), 0 6px 20px 0 var(--nav-color);
  border-radius: 5px;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: flex-start;
  background-color: gray;
  width: 300px;
  padding: 10px;
}
.settings-title {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}
.slider {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  width: 100%;
}
.speed {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  width: 100%;
}
hr {
  width: 100%;
  border: 1 solid white;
}
@media screen and (-webkit-min-device-pixel-ratio: 0) {
  input[type="range"] {
    overflow: hidden;
    width: 300px;
    -webkit-appearance: none;
    background-color: white;
  }

  input[type="range"]::-webkit-slider-runnable-track {
    height: 10px;
    width: 300px;
    -webkit-appearance: none;
    color: white;
    margin-top: -1px;
  }

  input[type="range"]::-webkit-slider-thumb {
    width: 10px;
    -webkit-appearance: none;
    height: 10px;
    cursor: ew-resize;
    background: #434343;
    box-shadow: -300px 0 0 300px white;
  }
}
input {
  cursor: pointer;
}

.loader {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: calc(100vh - var(--nav-height));
}
.loader h3 {
  font-size: 100px;
  height: 100px;
}

.grid-container {
  display: flex;
  height: calc(100vh - var(--nav-height));
}
.grid {
  display: flex;
  justify-content: space-evenly;
  width: 100%;
  height: 100%;
  cursor: var(--grid-cursor);
}
.grid-table {
  border-collapse: collapse;
  border-spacing: 0;
  pointer-events: var(--grid-interact);
}

.unvisited {
  cursor: var(--grid-cursor);
  background-color: white;
}
.unvisited:hover {
  background-color: rgba(236, 233, 32, 0.11);
}

td {
  border: 1px solid lightblue;
  height: var(--size);
  width: var(--size);
}
.specs {
  color: rgb(13, 13, 39);
  font-size: var(--font-size);
  visibility: var(--visibility);
  pointer-events: none;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
}

@keyframes visitedStartNodeBlueAnimation {
  0% {
    transform: scale(0.3);
    background-color: rgba(0, 0, 66, 0.75);
    border-radius: 100%;
  }

  50% {
    background-color: rgba(17, 104, 217, 0.75);
  }

  75% {
    transform: scale(1.2);
    background-color: rgba(0, 217, 159, 0.75);
  }

  100% {
    transform: scale(1);
    background-color: rgba(0, 190, 218, 0.75);
  }
}

@keyframes wallAnimation {
  0% {
    transform: scale(0.3);
    border-radius: 100%;
  }
  75% {
    transform: scale(1.2);
  }

  100% {
    transform: scale(1);
  }
}
@keyframes startNodeAnimation {
  0% {
    transform: scale(0.3);
    border-radius: 100%;
  }
  75% {
    transform: scale(1.2);
  }

  100% {
    transform: scale(1);
  }
}

.start-node {
  border-radius: var(--size);
  cursor: var(--node-cursor);
  background-image: url("./Images/arrow-icon--myiconfinder-23.png");

  background-size: contain;

  animation-name: startNodeAnimation;
  animation-duration: calc(var(--toggle) * var(--animation-speed));
  animation-play-state: var(--playState);
}
.start-node:active {
  position: absolute;
  border-color: transparent;
}
@keyframes endNodeAnimation {
  0% {
    transform: scale(0.3);
    border-radius: 100%;
  }
  75% {
    transform: scale(1.2);
  }

  100% {
    transform: scale(1);
  }
}
.noanimation * {
  -webkit-animation: none !important;
  -moz-animation: none !important;
  -o-animation: none !important;
  -ms-animation: none !important;
  animation: none !important;
}
.end-node {
  cursor: var(--node-cursor);
  background-image: url("./Images/targetreal.png");
  background-size: cover;
  animation-name: endNodeAnimation;
  animation-duration: calc(var(--toggle) * var(--animation-speed));
  animation-play-state: var(--playState);
}
.end-node:active {
  position: absolute;
  border-color: transparent;
}
.wall {
  cursor: var(--grid-cursor);
  background-color: rgb(13, 13, 39);
  animation-name: wallAnimation;
  animation-duration: calc(var(--toggle) * var(--animation-speed));
  animation-play-state: var(--playState);
}
.path {
  cursor: var(--grid-cursor);
  background-color: rgb(238, 228, 91);
  border-color: rgb(238, 228, 91);
  animation-name: wallAnimation;
  animation-duration: calc(var(--toggle) * var(--animation-speed-path));
  animation-play-state: var(--playState);
}
.visited {
  cursor: var(--grid-cursor);
  background-color: rgba(247, 233, 46, 0.75);
  animation-name: visitedStartNodeBlueAnimation;
  animation-duration: calc(var(--toggle) * var(--animation-speed-visited));
  animation-play-state: var(--playState);
  animation-fill-mode: forwards;
  animation-delay: var(--visit-delay);
}
.visited-immediate {
  cursor: var(--grid-cursor);
  background-color: rgba(0, 190, 218, 0.75);
}
.path-immediate {
  cursor: var(--grid-cursor);
  background-color: rgb(238, 228, 91);
  border-color: rgb(238, 228, 91);
}

@keyframes deepRedAnimation {
  0% {
    background-color: rgba(0, 190, 218, 0.75);
    /*border-radius: 100%;*/
  }

  100% {
    background-color: rgb(255, 0, 55);
  }
}

.deepred {
  cursor: var(--grid-cursor);
  background-color: rgb(255, 0, 55);
  animation-name: deepRedAnimation;
  animation-duration: calc(var(--toggle) * var(--animation-speed-path));
  animation-play-state: var(--playState);
}

.distance {
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  color: white;
  padding-right: 40px;
}
